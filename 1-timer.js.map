{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\n\n\n\n\nconst startBtn = document.querySelector('[data-start]');\nconst datePicker = document.querySelector('#datetime-picker');\n\nconst daysField = document.querySelector('[data-days]');\nconst hoursField = document.querySelector('[data-hours]');\nconst minutesField = document.querySelector('[data-minutes]');\nconst secondsField = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet timerId = null;\n\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const pickedDate = selectedDates[0];\n    if (pickedDate <= new Date()) {\n      iziToast.error({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      startBtn.disabled = true;\n    } else {\n      userSelectedDate = pickedDate;\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(datePicker, options);\n\n\nstartBtn.addEventListener('click', () => {\n  if (!userSelectedDate) return;\n\n  startBtn.disabled = true;\n  datePicker.disabled = true;\n\n  timerId = setInterval(() => {\n    const now = new Date();\n    const diff = userSelectedDate - now;\n\n    if (diff <= 0) {\n      clearInterval(timerId);\n      updateClock(0);\n      datePicker.disabled = false;\n      return;\n    }\n\n    updateClock(diff);\n  }, 1000);\n});\n\n\nfunction updateClock(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n  daysField.textContent = addLeadingZero(days);\n  hoursField.textContent = addLeadingZero(hours);\n  minutesField.textContent = addLeadingZero(minutes);\n  secondsField.textContent = addLeadingZero(seconds);\n}\n\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["startBtn","datePicker","daysField","hoursField","minutesField","secondsField","userSelectedDate","timerId","options","selectedDates","pickedDate","iziToast","flatpickr","diff","updateClock","ms","days","hours","minutes","seconds","convertMs","addLeadingZero","value"],"mappings":"+IAWA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAa,SAAS,cAAc,kBAAkB,EAEtDC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EAE5D,IAAIC,EAAmB,KACnBC,EAAU,KAGd,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAaD,EAAc,CAAC,EAC9BC,GAAc,IAAI,MACpBC,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,UAClB,CAAO,EACDX,EAAS,SAAW,KAEpBM,EAAmBI,EACnBV,EAAS,SAAW,GAEvB,CACH,EAEAY,EAAUX,EAAYO,CAAO,EAG7BR,EAAS,iBAAiB,QAAS,IAAM,CAClCM,IAELN,EAAS,SAAW,GACpBC,EAAW,SAAW,GAEtBM,EAAU,YAAY,IAAM,CAE1B,MAAMM,EAAOP,EADD,IAAI,KAGhB,GAAIO,GAAQ,EAAG,CACb,cAAcN,CAAO,EACrBO,EAAY,CAAC,EACbb,EAAW,SAAW,GACtB,MACD,CAEDa,EAAYD,CAAI,CACjB,EAAE,GAAI,EACT,CAAC,EAGD,SAASC,EAAYC,EAAI,CACvB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EACtDb,EAAU,YAAcmB,EAAeL,CAAI,EAC3Cb,EAAW,YAAckB,EAAeJ,CAAK,EAC7Cb,EAAa,YAAciB,EAAeH,CAAO,EACjDb,EAAa,YAAcgB,EAAeF,CAAO,CACnD,CAGA,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAGA,SAASF,EAAUL,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}